{
  "name": "dependants-parser",
  "version": "0.0.5",
  "description": "Parse dependants given a module, a root and an import syntax",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/tancredi/dependants-parser"
  },
  "scripts": {
    "test": "mocha test"
  },
  "author": {
    "name": "Tancredi Trugenberger"
  },
  "license": "BSD-2-Clause",
  "dependencies": {
    "walkdir": "0.0.x"
  },
  "devDependencies": {
    "mocha": "~1.14.x",
    "should": "~2.1.x"
  },
  "readme": "# dependants-parser\n\n[![Build Status](https://travis-ci.org/tancredi/dependants-parser.png)](https://travis-ci.org/tancredi/dependants-parser)\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/tancredi/dependants-parser/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n> Utility to recursively fetch dependant modules by parsing require syntaxes targeting a specified local module using a given a root directory and an import expression regex.\n\n## The problem\n\nWhile writing a custom watch-build tool I needed some quick and easy way to figure out which modules depended on the  file that changed would be emitted to in order to avoid re-compiling every file in the codebase at every change.\n\nThis tool is easily extensible to work with most pre-processors & syntaxes as long as their import command can be expressed with a regular expression and the modules are located relatively to the target file.\n\nBy now Stylus and CommonJS regexes are available by default in this module.\n\n## Install\n\n```\nnpm install dependants-parser\n```\n\n## Test\n\nTest with Mocha by running\n\n```\nnpm test\n```\n\n## Simple usage\n\nConsidering the following tree:\n\n```\n.\n├── index.js\n└── stylus\n    ├── root.styl\n    └── target.styl\n```\n\nstylus/root.styl:\n\n```stylus\n@import 'target.styl'\n```\n\nindex.js:\n\n```javascript\nvar dependants = require('dependants-tree');\n\nvar out = dependants.findSync(\n\t'stylus/target.styl',\t\t// Target dependency\n\t'stylus',\t\t\t\t\t// Modules root\n\tdependants.patterns.stylus\t// Import expression regex\n\t);\n\nconsole.log(out);\n// [ 'abs/path/to/stylus/root.styl' ]\n```\n\n## Exports\n\n#### `.findSync(filepath, root, importRegex, [ match ])`\n\nReturns an array containing absolute paths of all modules that depend on `filepath` found in `root`, given an import expression syntax.\n\n* `filepath` (String) - Path to target module. This needs to be the real filename.\n* `root` - (String) Directory to recursively scan for dependants.\n* `importRegex` - (RegExp|Object) Import syntax expression. Used to parse out a file's dependency. You can also pass an object containing the keys 'exp' (RegExp) and 'offset' (number) of the result module string\n* `[ match ]` - (RegExp) Filename match expression. Use to filter files to scan.\n\n#### `.patterns`\n\nContains simple ready-to-use regexes for local import syntaxes\n\n* `.stylus` - `@import 'module'` Stylus syntax pattern\n* `.commonjs` - `require('module')` CommonJS syntax pattern\n* `.jade` - `include module | extend module` Jade syntax pattern\n\n## Contribute\n\nIt would be great to provide import syntaxes for other languages / pre-processors (LESS, SASS, SCSS, Jade, Handlebars) this module could be used for.\n\nPlease feel free to drop a pull request if you're using this module with a custom expressions or improving the current ones / writing more tests.\n\nRegexes are tested in `test/regexes.js`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tancredi/dependants-parser/issues"
  },
  "_id": "dependants-parser@0.0.5",
  "dist": {
    "shasum": "3f91e55251657e749137439da8adbbb609cee8fb",
    "tarball": "http://registry.npmjs.org/dependants-parser/-/dependants-parser-0.0.5.tgz"
  },
  "_from": "dependants-parser@*",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "tancredi",
    "email": "tancredi.trugenberger@gmail.com"
  },
  "maintainers": [
    {
      "name": "tancredi",
      "email": "tancredi.trugenberger@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "3f91e55251657e749137439da8adbbb609cee8fb",
  "_resolved": "https://registry.npmjs.org/dependants-parser/-/dependants-parser-0.0.5.tgz",
  "homepage": "https://github.com/tancredi/dependants-parser"
}
